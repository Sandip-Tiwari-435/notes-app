[{"/home/sandip/Documents/programming/reacting/create_notes_app/src/index.js":"1","/home/sandip/Documents/programming/reacting/create_notes_app/src/App.js":"2","/home/sandip/Documents/programming/reacting/create_notes_app/src/components/NotesList.js":"3","/home/sandip/Documents/programming/reacting/create_notes_app/src/components/Note.js":"4","/home/sandip/Documents/programming/reacting/create_notes_app/src/components/AddNote.js":"5","/home/sandip/Documents/programming/reacting/create_notes_app/src/components/Header.js":"6"},{"size":233,"mtime":1656578992754,"results":"7","hashOfConfig":"8"},{"size":1680,"mtime":1656588875023,"results":"9","hashOfConfig":"8"},{"size":381,"mtime":1656573424838,"results":"10","hashOfConfig":"8"},{"size":437,"mtime":1656573608203,"results":"11","hashOfConfig":"8"},{"size":1034,"mtime":1656578209257,"results":"12","hashOfConfig":"8"},{"size":323,"mtime":1656580414172,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nju1xx",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sandip/Documents/programming/reacting/create_notes_app/src/index.js",[],[],"/home/sandip/Documents/programming/reacting/create_notes_app/src/App.js",["33","34"],[],"import React, { useState, useRef, useEffect } from 'react';\nimport NotesList from './components/NotesList';\nimport Header from './components/Header';\nimport './style.css';\nimport { nanoid } from 'nanoid';\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [searchText,setSearchText] =useState('');\n  const [toggleInfo,setToggleInfo]=useState(true);\n\n  useEffect(()=>{\n    const savedNotes=JSON.parse(\n      localStorage.getItem('create_notes_app_data')\n    );\n\n    if(savedNotes) {setNotes(savedNotes);}\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(\n      'create_notes_app_data',\n      JSON.stringify(notes)\n    );\n  },[notes])\n\n  const addnote = (text) => {\n    const date=new Date();\n    const newNote={\n      text:text,\n      date:date.toLocaleDateString(),\n      id:nanoid()\n    }\n    const newNotes=[...notes,newNote];\n    setNotes(newNotes);\n  }\n\n  \n  const delNote = (id)=>{\n    const newNotes=notes.filter((note)=>{\n      if(note.id!==id) return note;\n    });\n    setNotes(newNotes);\n  }\n\n  const Toggler=(toggleInfo)=>{\n    if(toggleInfo===false) document.body.style.backgroundColor='white';\n    else document.body.style.backgroundColor='#121212';\n    setToggleInfo(!toggleInfo);\n    \n  }\n\n  const searcher=(event)=>{\n    setSearchText(event.target.value);\n  }\n\n  return (\n    <div className='container'>\n      <Header toggleInfo={toggleInfo} Toggler={Toggler} />\n      <input type=\"text\" placeholder='Type to search...' onChange={searcher} className=\"inp-box\" />\n      <NotesList notes={notes.filter((note)=>note.text.toLowerCase().includes(searchText))} handleDelNote={delNote} handleAddNote={addnote} />\n    </div>\n  )\n}\n\nexport default App;\n","/home/sandip/Documents/programming/reacting/create_notes_app/src/components/NotesList.js",[],[],"/home/sandip/Documents/programming/reacting/create_notes_app/src/components/Note.js",[],[],"/home/sandip/Documents/programming/reacting/create_notes_app/src/components/AddNote.js",[],[],"/home/sandip/Documents/programming/reacting/create_notes_app/src/components/Header.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":27,"nodeType":"37","messageId":"38","endLine":1,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":41,"column":39,"nodeType":"41","messageId":"42","endLine":41,"endColumn":41},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]